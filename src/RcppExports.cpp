// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// indiv_sim_cpp
Rcpp::List indiv_sim_cpp(Rcpp::List args, Rcpp::List args_functions, Rcpp::List args_progress);
RcppExport SEXP _SIMPLEGEN_indiv_sim_cpp(SEXP argsSEXP, SEXP args_functionsSEXP, SEXP args_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_functions(args_functionsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_progress(args_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(indiv_sim_cpp(args, args_functions, args_progress));
    return rcpp_result_gen;
END_RCPP
}
// prune_transmission_record_cpp
Rcpp::List prune_transmission_record_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_prune_transmission_record_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(prune_transmission_record_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// sim_haplotype_tree_cpp
Rcpp::List sim_haplotype_tree_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_sim_haplotype_tree_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_haplotype_tree_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// get_haplotype_relatedness_cpp
Rcpp::List get_haplotype_relatedness_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_get_haplotype_relatedness_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_haplotype_relatedness_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// sim_block_tree_cpp
Rcpp::List sim_block_tree_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_sim_block_tree_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_block_tree_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// get_haplotype_coalescence_cpp
Rcpp::List get_haplotype_coalescence_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_get_haplotype_coalescence_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_haplotype_coalescence_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// get_haplotype_coalescence2_cpp
Rcpp::List get_haplotype_coalescence2_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_get_haplotype_coalescence2_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_haplotype_coalescence2_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// write_vcf_cpp
void write_vcf_cpp(Rcpp::List args);
RcppExport SEXP _SIMPLEGEN_write_vcf_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    write_vcf_cpp(args);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SIMPLEGEN_indiv_sim_cpp", (DL_FUNC) &_SIMPLEGEN_indiv_sim_cpp, 3},
    {"_SIMPLEGEN_prune_transmission_record_cpp", (DL_FUNC) &_SIMPLEGEN_prune_transmission_record_cpp, 1},
    {"_SIMPLEGEN_sim_haplotype_tree_cpp", (DL_FUNC) &_SIMPLEGEN_sim_haplotype_tree_cpp, 1},
    {"_SIMPLEGEN_get_haplotype_relatedness_cpp", (DL_FUNC) &_SIMPLEGEN_get_haplotype_relatedness_cpp, 1},
    {"_SIMPLEGEN_sim_block_tree_cpp", (DL_FUNC) &_SIMPLEGEN_sim_block_tree_cpp, 1},
    {"_SIMPLEGEN_get_haplotype_coalescence_cpp", (DL_FUNC) &_SIMPLEGEN_get_haplotype_coalescence_cpp, 1},
    {"_SIMPLEGEN_get_haplotype_coalescence2_cpp", (DL_FUNC) &_SIMPLEGEN_get_haplotype_coalescence2_cpp, 1},
    {"_SIMPLEGEN_write_vcf_cpp", (DL_FUNC) &_SIMPLEGEN_write_vcf_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SIMPLEGEN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
